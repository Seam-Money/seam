import React, { useState } from "react";
import { Link } from "react-router-dom";
import { AnimatePresence, motion } from "framer-motion";
import ProgressBar from "@ramonak/react-progress-bar";
import AreaChart from "components/graphs/AreaChart";
import TokenStack from "components/TokenStack";
import Overlay from "components/card/Overlay";
import Modal from "components/card/Modal";

export const SliderCard = ({ pool }: any) => {
    const [open, setOpen] = useState(false);

    const openModal = () => {
        setOpen(true);
    };
    const closeModal = () => {
        setOpen(false);
    };

    return (
        <>
            <Link to={`/detail?name=${pool.name}&tokens=${pool.assets}`}>
                <motion.div className="listing" whileHover={{ scale: 1.05, y: 8 }}>
                    <div className="card-body">
                        <div
                            className="flex flex-col text-white cursor-pointer z-10 relative rounded-2xl bg-cardgray border-dashed border-[3px]"
                            id={`${pool.name}-${pool.platform}`}
                        >
                            {/* TOKEN */}

                            <div className="bg-[#12171D] p-4 rounded-t-2xl">
                                <div className="text-center">
                                    <p className="text-xl font-bold">
                                        {pool.description}
                                    </p>
                                    <p className="text-xl font-bold">
                                        Composite
                                    </p>
                                    {/* <p className="flex items-center text-xl font-bold min-h-[4rem]">{pool.name}</p>
                                    {CategoryTag(pool.category_tag)} */}

                                </div>
                            </div>
                            <div className="p-4">
                                <div className="flex">
                                    {pool.assets.map((token: string, index: number) => {
                                        return (
                                            <div className="m-2 px-2 py-1 bg-[#00E8A2] rounded-md text-black font-bold text-sm" key={index}>
                                                {token}
                                            </div>
                                        )
                                    })}
                                </div>
                                <div>
                                    <AreaChart />
                                </div>
                                <div className="px-9">
                                    Yield is generated by single-staking APT on Tortuga and borrowing wETH from Aptin to LP into wETH-USDC on Liquid Swap
                                </div>
                            </div>
                            {/* {ProtocolTag(pool.platform)} */}
                            <TokenStack tokens={pool.assets} />
                            {/* <div className="flex flex-row justify-between">
                <Stat
                  format={true}
                  name="Portion"
                  value={pool.portion * 100}
                  unit="%"
                />
              </div> */}
                            <div className="flex px-4 justify-between items-end my-5">
                                <div className="grow">
                                    <p className="text-[12px] my-1">Aggregate Risk Rating</p>
                                    <ProgressBar completed="60" isLabelVisible={false} className="progress-wrapper" baseBgColor="#1E2125" bgColor="linear-gradient(to right, #e80053 0%, #ff9999 100%)" borderRadius="4px" />
                                </div>
                                <div className="flex-1 text-end">
                                    <p className="text-[#E80053] text-[12px]">HIGH/46%</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </motion.div>

                <AnimatePresence>
                    {open && (
                        <Overlay close={closeModal}>
                            <Modal close={closeModal} />
                        </Overlay>
                    )}
                </AnimatePresence>
            </Link>
        </>
    );
};